{"version":3,"sources":["data.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["chillHop","name","cover","artist","audio","color","id","uuidv4","active","Player","audioRef","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setSongs","useEffect","newSongs","map","song","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","formatTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","trackGredient","background","className","currentTime","style","type","min","max","duration","value","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","alt","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","animPercentage","round","songEndHandler","sectionStyle","width","backgroundImage","backgroundSize","position","onTimeUpdate","onLoadedMetadata","onEnded","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d81a884c.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;","import { useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\n\n// import { playAudio } from \"../utils\";\n\nconst Player = ({ \n  audioRef, \n  currentSong, \n  setCurrentSong, \n  isPlaying, \n  setIsPlaying, \n  songInfo, \n  setSongInfo, \n  songs,\n  setSongs \n  }) => {\n\n  /** useEffect **/\n  // skipSong Event cause currentSong state change\n  // useEffect runs evertime currentSong state change \n  useEffect(() => {\n\n    // Update Active State and Songs State\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n  \n    setSongs(newSongs);\n  }, [currentSong])\n\n  /** Event Handlers **/\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n       audioRef.current.play();\n       setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragSlideBarHandler = (e) => {\n    // update the dudio\n    audioRef.current.currentTime = e.target.value;\n    // update sliderbar value \n    setSongInfo({\n      ...songInfo,\n      currentTime: e.target.value\n    })\n  }\n\n  // action: setCurrentSong by the update currentIndex - loop back if end of list\n  // omitted: update active song state (move in useEffect logic) \n  // action: play song\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id) || 0;\n\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n    }\n    if (direction === \"skip-back\") {\n      // if index pass 0, set currentSong to the last song\n      if ((currentIndex - 1) % songs.length < 0) {\n        await setCurrentSong(songs[songs.length -1])\n        // play song\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length])\n    }\n\n    // play song\n    if (isPlaying) audioRef.current.play();\n  }\n\n  /** Helper functions **/\n  const formatTime = (time) => {\n    return (\n      // minuite : left from everytime it go up to 60s\n      Math.floor(time / 60) + \":\" + (\"0\"+ Math.floor(time % 60 )).slice(-2)\n    )\n  }\n\n  // Add styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)` \n  };\n\n  const trackGredient = {\n    background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`\n  }\n\n  return(\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{formatTime(songInfo.currentTime)}</p>\n        <div style={trackGredient} className=\"track\">\n          <input \n            type=\"range\" \n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragSlideBarHandler}\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? formatTime(songInfo.duration) : \"0:00\" }</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon \n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\" \n          size=\"2x\" \n          icon={faAngleLeft} \n        />\n        <FontAwesomeIcon \n          onClick={playSongHandler} \n          className=\"play\" \n          size=\"2x\" \n          icon={ isPlaying ? faPause : faPlay } \n        />\n        <FontAwesomeIcon \n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\" \n          size=\"2x\" \n          icon={faAngleRight} \n        />\n      </div>\n    </div>\n  )\n} \n\nexport default Player; ","const Song = ({ currentSong, isPlaying }) => {\n  const { cover, name, artist } = currentSong;\n  return(\n    <div className=\"song-container\">\n      <img \n        className={isPlaying ? \"song-playing\" : \"\"} \n        src={cover} \n        alt={name}\n      ></img>\n      <h2>{name}</h2>\n      <h3>{artist}</h3>\n    </div>\n  )\n}\n\nexport default Song;","// import { playAudio } from \"../utils\";\n\nconst LibrarySong = ({ audioRef, isPlaying, songs, setSongs, song, setCurrentSong }) => {\n  const { cover, name, artist, id, active} = song;\n\n  \n  /**\n   * @desc Event Handler\n   * action: setCurrentSong\n   * omitted: update songs state with the update active state (move logic to useEffect in <Player>)\n   * action: when song is loaded, play song\n   */\n  const songSelectHandler = async () => {\n    // wait until song is laoded\n    //  setCurrentSong- CurrentSong state change- will trigger useEffect in <Player> to run fucntion to update active state\n    await setCurrentSong(song);\n\n    // play song\n    if (isPlaying) audioRef.current.play();\n  };\n  \n  return(\n    <div \n      onClick={songSelectHandler} \n      className={`library-song ${active ? \"selected\" : \"\"}`}\n    >\n      <img src={cover} alt={name}></img>\n      <div className=\"song-description\">\n        <h3>{name}</h3>\n        <h4>{artist}</h4>\n      </div>\n    </div>\n  )\n}\n\nexport default LibrarySong; ","import LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ audioRef, isPlaying, songs, setSongs, setCurrentSong, libraryStatus }) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\": \"\"}`} >\n      <h2>Song Library</h2>\n      <div className=\"library-songs\">\n      {songs.map((song) => (\n         <LibrarySong \n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            songs={songs}\n            setSongs={setSongs} \n            song={song} \n            key={song.id}\n            setCurrentSong={setCurrentSong} \n         />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Library;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\n  return (\n    <nav>\n      {/* <h1>Chill Jam</h1> */}\n      <button onClick={()=> setLibraryStatus(!libraryStatus)}>\n        <FontAwesomeIcon icon={faMusic} />\n        Library\n      </button>\n    </nav>\n  )\n};\n\nexport default Nav; ","import { useState, useRef } from \"react\";\n\nimport \"./styles/app.scss\";\nimport data from \"./data\";\n\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n\n  // get whole array of object form calling data function\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  /** Event Handlers **/\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n\n    // calculate Percentage\n    const animPercentage = Math.round((currentTime / duration) * 100);\n\n    setSongInfo({\n      ...songInfo, \n      currentTime, \n      duration,\n      animationPercentage: animPercentage\n    });\n  };\n\n  const songEndHandler = async () => {\n    // skip song forward when it's ended\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id) || 0;\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n    // play song\n    if (isPlaying) audioRef.current.play();\n  };\n\n  // change background image\n  const {cover} = currentSong;\n  const sectionStyle = {\n    width: \"100%\",\n    backgroundImage: `url(${cover})`,\n    backgroundSize: \"cover\",\n    position: \"center\"\n  }\n  \n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\" }`}>\n    <div className=\"display-container\">\n      <Nav \n        libraryStatus={libraryStatus} \n        setLibraryStatus={setLibraryStatus} \n      />\n      <section className=\"outer-display\" style={sectionStyle}>\n        {/* <Nav \n          libraryStatus={libraryStatus} \n          setLibraryStatus={setLibraryStatus} \n      /> */}\n      </section>\n      <section className=\"inner-display\">\n        <Song currentSong={currentSong} isPlaying={isPlaying} />\n        <Player \n          audioRef={audioRef}\n          currentSong={currentSong}\n          setCurrentSong={setCurrentSong}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          songInfo={songInfo}\n          setSongInfo={setSongInfo}\n          songs={songs}\n          setSongs={setSongs}\n        />\n      </section>\n    \n    </div>\n      <Library \n        audioRef={audioRef} \n        isPlaying={isPlaying}\n        songs={songs} \n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n        libraryStatus={libraryStatus}\n      />\n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n        ref={audioRef} \n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}